1.0 common configuration
------------------------
# All private packages of imx require the following configuration
BB_NO_NETWORK = '0'
ACCEPT_FSL_EULA = "1"
LICENSE_FLAGS_ACCEPTED:append = " commercial"

CUSTOMER_RECIPES:fsl-bsp-release += 'imx-m33-demos'
BSP_NXP_DERIVED:append:nxp-imx9  = " nxp-imx9"
DISTROOVERRIDES:nxp-imx9 = "fsl fslc"
MACHINEOVERRIDES:prepend:nxp-imx9 = "imx-generic-bsp:imx-nxp-bsp:imxdrm:imxpxp:mx9-generic-bsp:mx9-nxp-bsp:mx93-generic-bsp:mx93-nxp-bsp:use-nxp-bsp:"

2.1 GPU
-------
Because of the licesen issue, nxp-imx9 layer doesn't integrate imx9's PXP hardware
acceleration related packages into WRlinux product. So, if customer wants to run
hardware graphic feature. Detail steps as below:

<1> echo the following content to local.conf:

DISTRO_FEATURES:remove = "directfb "
DISTRO_FEATURES:append = " x11 wayland pam"
IMAGE_FEATURES:append = " weston"
MACHINE_HAS_VIVANTE_KERNEL_DRIVER_SUPPORT = "1"

# QA check settings - a little stricter than the OE-Core defaults
WARN_TO_ERROR_QA = "already-stripped compile-host-path install-host-path \
                    installed-vs-shipped ldflags pn-overrides rpaths staticdev \
                    useless-rpaths"
WARN_QA:remove = "${WARN_TO_ERROR_QA}"
ERROR_QA:append = " ${WARN_TO_ERROR_QA}"

IMAGE_INSTALL:append = "  weston weston-init imx-pxp-g2d imx-g2d-samples weston-xwayland mesa-demos"

PREFERRED_VERSION_weston:mx93-nxp-bsp = "12.0.3.imx"
PREFERRED_PROVIDER_virtual/libg2d:mx93-nxp-bsp ?= "imx-pxp-g2d"
PREFERRED_VERSION_libdrm:mx93-nxp-bsp = "2.4.116.imx"
CUSTOMER_RECIPES:fsl-bsp-release += 'imx-g2d-samples'
CUSTOMER_RECIPES:fsl-bsp-release += 'mesa'
CUSTOMER_RECIPES:fsl-bsp-release += 'imx-pxp-g2d'
CUSTOMER_RECIPES:fsl-bsp-release += 'wayland-protocols'
CUSTOMER_RECIPES:fsl-bsp-release += 'weston-init'
CUSTOMER_RECIPES:fsl-bsp-release += 'weston'
CUSTOMER_RECIPES:freescale-layer += 'xwayland'
CUSTOMER_RECIPES:fsl-bsp-release += 'linux-imx-headers'
CUSTOMER_RECIPES:fsl-bsp-release += 'wayland-protocols'
CUSTOMER_RECIPES:fsl-bsp-release += 'libdrm'

<2> startup we will find that weston starts under g2d acceleration

2.2 NPU & M33
-------------

<1> echo the following content to local.conf:

Since some use cases also rely on graphics, this part is based on the 2.1
graphics acceleration part.

CUSTOMER_RECIPES:imx-machine-learning += 'ethos-u-firmware'
CUSTOMER_RECIPES:imx-machine-learning += 'ethos-u-driver-stack'
CUSTOMER_RECIPES:imx-machine-learning += 'ethos-u-vela'
CUSTOMER_RECIPES:imx-machine-learning += 'eiq-examples'
CUSTOMER_RECIPES:imx-machine-learning += 'tensorflow-lite'
CUSTOMER_RECIPES:imx-machine-learning += 'tensorflow-lite-host-tools-native'
CUSTOMER_RECIPES:imx-machine-learning += 'tensorflow-lite-ethosu-delegate'
CUSTOMER_RECIPES:imx-machine-learning += 'flatbuffers'
CUSTOMER_RECIPES:imx-machine-learning += 'python3-flatbuffers'
PREFERRED_VERSION_flatbuffers:mx93-nxp-bsp = "23.5.26"
PREFERRED_VERSION_python3-flatbuffers:mx93-nxp-bsp = "23.5.26"
PREFERRED_VERSION_tensorflow-lite:mx93-nxp-bsp = "2.14.0"

IMAGE_INSTALL:append = " ethos-u-firmware ethos-u-driver-stack ethos-u-vela eiq-examples tensorflow-lite-ethosu-delegate python3-setuptools"

<2> startup & run following cmd:

cd /usr/bin/eiq-examples-git/image_classification
mkdir -p ../models/
cp /usr/bin/tensorflow-lite-2.14.0/examples/mobilenet_v1_1.0_224_quant.tflite ../models/

root@nxp-imx9:/usr/bin/eiq-examples-git/image_classification# python3 label_image.py -d /usr/lib64/libethosu_delegate.so -i grace_hopper.bmp -l labels.txt
INFO: Ethosu delegate: device_name set to /dev/ethosu0.
INFO: Ethosu delegate: cache_file_path set to .
INFO: Ethosu delegate: timeout set to 60000000000.
INFO: Ethosu delegate: enable_cycle_counter set to 0.
INFO: Ethosu delegate: enable_profiling set to 0.
INFO: Ethosu delegate: profiling_buffer_size set to 2048.
INFO: Ethosu delegate: pmu_event0 set to 0.
INFO: Ethosu delegate: pmu_event1 set to 0.
INFO: Ethosu delegate: pmu_event2 set to 0.
INFO: Ethosu delegate: pmu_event3 set to 0.
remoteproc remoteproc0: powering up imx-rproc
remoteproc remoteproc0: Booting fw image ethosu_firmware, size 244744
rproc-virtio rproc-virtio.3.auto: assigned reserved memory node vdevbuffer@a4020000
virtio_rpmsg_bus virtio0: rpmsg host is online
rproc-virtio rproc-virtio.3.auto: registered virtio0 (type 7)
rproc-virtio rproc-virtio.4.auto: assigned reserved memory node vdevbuffer@a4020000
virtio_rpmsg_bus virtio1: rpmsg host is online
virtio_rpmsg_bus virtio1: creating channel rpmsg-ethosu-channel addr 0x1e
rproc-virtio rproc-virtio.4.auto: registered virtio1 (type 7)
remoteproc remoteproc0: remote processor imx-rproc is now up
INFO: EthosuDelegate: 31 nodes delegated out of 31 nodes with 1 partitions.

0.874510: military uniform
0.031373: Windsor tie
0.015686: mortarboard
0.011765: bulletproof vest
0.007843: bow tie
time: 4.131ms

The current test result is about 4ms, which is about 20 times faster than without NPU.

2.3 imx-boot build
------------------

# u-boot
IMAGE_INSTALL:append = " imx-boot"

PREFERRED_PROVIDER_virtual/bootloader:mx9-nxp-bsp = "u-boot-imx"
CUSTOMER_RECIPES:fsl-bsp-release += 'u-boot-imx'
CUSTOMER_RECIPES:fsl-bsp-release += 'imx-atf'
CUSTOMER_RECIPES:fsl-bsp-release += 'imx-boot'
CUSTOMER_RECIPES:fsl-bsp-release += 'imx-mkimage'
CUSTOMER_RECIPES:fsl-bsp-release += 'imx-boot-firmware-files'
CUSTOMER_RECIPES:fsl-bsp-release += 'firmware-ele-imx'
IMX_EXTRA_FIRMWARE:mx93-generic-bsp = "imx-boot-firmware-files firmware-ele-imx"
SECOEXT_FIRMWARE_NAME:mx93-generic-bsp   ?= "mx93${IMX_SOC_REV_LOWER}-ahab-container.img"

CUSTOMER_BUILD_BOOTLOADER = "1"

IMX_SOC_REV:mx93-generic-bsp  = "A1"
IMX_SOC_REV_UPPER   = "${@d.getVar('IMX_SOC_REV').upper()}"
IMX_SOC_REV_LOWER   = "${@d.getVar('IMX_SOC_REV').lower()}"
SECO_FIRMWARE_NAME:mx93-generic-bsp   ?= "mx93${IMX_SOC_REV_LOWER}-ahab-container.img"

KERNEL_DEVICETREE_BASENAME = "imx93-11x11-evk"

KERNEL_DEVICETREE:append:use-nxp-bsp = " \
    freescale/${KERNEL_DEVICETREE_BASENAME}-aud-hat.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-boe-wxga-lvds-panel.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-flexio-i2c.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-flexspi-m2.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-i3c.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-inmate.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-lpspi-slave.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-lpspi.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-lpuart.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-mqs.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-mt9m114.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-rm67199.dtb \
    freescale/${KERNEL_DEVICETREE_BASENAME}-root.dtb \
 "

UBOOT_CONFIG_BASENAME = "imx93_11x11_evk"

DDR_FIRMWARE_NAME = " \
    lpddr4_dmem_1d_v202201.bin \
    lpddr4_dmem_2d_v202201.bin \
    lpddr4_imem_1d_v202201.bin \
    lpddr4_imem_2d_v202201.bin \
"
KERNEL_DEVICETREE = " \
    freescale/${KERNEL_DEVICETREE_BASENAME}.dtb \
"
UBOOT_DTB_NAME = "${KERNEL_DEVICETREE_BASENAME}.dtb"

IMX_DEFAULT_BOOTLOADER:use-nxp-bsp = "u-boot-imx"
IMX_DEFAULT_BOOTLOADER:use-mainline-bsp = "u-boot-fslc"

LOADADDR = ""
UBOOT_SUFFIX = "bin"
UBOOT_MAKE_TARGET = ""

SPL_BINARY = "spl/u-boot-spl.bin"

UBOOT_CONFIG ??= "mx93evk"
UBOOT_CONFIG[mx93evk]   = "${UBOOT_CONFIG_BASENAME}_defconfig,sdcard"

# Set ATF platform name
ATF_PLATFORM = "imx93"

IMXBOOT_TARGETS = "flash_singleboot"

IMX_BOOT_SOC_TARGET = "iMX9"
IMX_BOOT_SEEK = "32"

# We have to disable SERIAL_CONSOLE due to auto-serial-console
SERIAL_CONSOLES = "115200;ttyLP0"

IMX_DEFAULT_BSP = "nxp"

2.4 BT/WIFI
------------

There is an official recommended BT/WIFI module(LBES5PL2EL, NXP IW612 chipset) for imx93-evk board.

2.4.1 WIFI
----------

1) Building WIFI related packages

Add below contents into local.conf to support for WIFI feature.

CUSTOMER_RECIPES:fsl-bsp-release += 'nxp-wlan-sdk'
CUSTOMER_RECIPES:fsl-bsp-release += 'kernel-module-nxp-wlan'
CUSTOMER_RECIPES:fsl-bsp-release += 'wireless-tools'
IMAGE_INSTALL:append = " nxp-wlan-sdk kernel-module-nxp-wlan udev-extraconf"

2) Deploy WIFI firmware

Run below commands on PC to get firmware for NXP IW612 chipset.

		# git clone https://github.com/nxp-imx/imx-firmware
		# git checkout lf-6.6.3_1.0.0

Copy firmware and conf into target rootfs, directory is /lib/firmware/nxp.

		imx-firmware/nxp/FwImage_IW612_SD/*
		imx-firmware/nxp/wifi_mod_para.conf*

Note: create nxp directory if it doesb't exist under /lib/firmware/

3) Run WIFI feature

After system boots up, run below commands

	# modprobe mlan
	# modprobe moal mod_para=nxp/wifi_mod_para.conf
	# ifconfig mlan0 up
	# ifconfig uap0 up
	# iw dev mlan0 scan
	# ifconfig wlxa0cdf3780043 up
	# ifconfig wlxa2cdf3780143 up
	# iw dev wlxa0cdf3780043 scan
	# iw wlxa0cdf3780043 connect <AP essid>
	# dhcpcd wlxa0cdf3780043
	# ping <AP address> -I wlxa0cdf3780043 -c 5

2.4.2 BT
--------

After system boots up, run below commands to run BT feature

	# modprobe btnxpuart
	# hciconfig hci0 up
	# hcitool -i hci0 scan
	List devices BT MAC address scaned

	# hcitool dc <BT MAC address>
	# hcitool cc <BT MAC address>
	# hcitool con
	# l2ping -c 5 <BT MAC address>
